---
layout: post
title: 'Data processing primero, shell despu√©s: Nushell'
intro: 'Hace un par de a√±os me enter√© de esta herramienta que sinceramente no
logr√≥ cautivarme c√≥mo para reemplazar mi Zsh. No fue sino hasta
ayer nom√°s que finalmente entend√≠ su verdadero poder: data processing'
date: 2024-12-05 20:29:02 -0300
categories: general
toc: true
---

## Nushell no es Zsh

Como desarrollador con a√±os de experiencia trabajando en entornos de l√≠nea de
comandos, siempre ando buscando maneras y herramientas para poder mejorar mi
productividad. Es as√≠ que hace un par de a√±os me encuentro con
[Nushell](https://nushell.sh), una shell desarrollada en Rust, ultra r√°pida que
ten√≠a una linda sintaxis para manejar datos... Hype de por medio, procedo a
compilarlo y a tratar de migrar mi configuraci√≥n de Zsh.

Primer error: **Nushell no es POSIX**. Algunas funcionalidades y comportamientos 
de los comandos difer√≠an de lo que estaba acostumbrado en Zsh. Tras varios
intentos de adaptaci√≥n, decid√≠ volver a mi shell habitual. Hasta ayer.

## Cambio de paradigma: procesamiento de datos primero

Necesitaba procesar y cruzar datos de diferentes fuentes en archivos CSV y JSON.
Mi primir instinto cuando se refieren a este tipo de tareas es agarrar y tratar
de hacer un one-liner con Bash, si eso no funciona, script en Bash y finalmente
hacer un script en Python y a otra cosa. Sin embargo, esta vez el one-liner lo
hice en Nushell. ¬°Vaya sorpresa que me lleve!

Primero que nada, en lugar de manejar cadenas de texto c√≥mo lo hacen los
int√©rpretes de comandos convencionales, Nushell trabaja con tablas y objetos estructurados. Esto quiere
decir que pod√©s realizar operaciones complejas sobre cualquier tipo de dato
estructurado c√≥mo si fuese una base de datos. Pero desde la l√≠nea de comando.
Una locura.

Ah√≠ tuve un momento de iluminaci√≥n: no est√°s simplemente construyendo pipes de
texto, est√°s manipulando estructuras de datos organizadas ü§Ø.

![Neo sayung kung fu](https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExMGV2eW16aTVvNDJ2czVlejlhbWxsNGg2OWYwdjZ5OXdoMDUzazZzbiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/3o7btNhMBytxAM6YBa/giphy.gif)

No s√≥lo archivos estructurados tambi√©n salidas _normales_ c√≥mo `ls` pueden ser
tratadas c√≥mo tablas. Por ejemplo en vez de ejecutar `ls -lh | awk '{print $9"\t"$5}'`
para tener una tabla de nombre de archivo y su correspondiente tama√±o, en
Nushell se traduce a `ls -la | select name size`

![](/assets/images/blog/24-12-06/2024-12-06_18-34-15.png)

## Ventajas que marcan la diferencia

**Procesamiento de Datos Estructurados**

Nushell maneja datos estructurados en forma de tablas y objetos JSON. Esto facilita tareas como:

- Filtrar datos de forma precisa.
- Convertir formatos (CSV, JSON, YAML, etc.) sin herramientas externas.
- Explorar y transformar datos tabulares con una sintaxis legible y concisa.

**Conexi√≥n natural con APIs y herramientas modernas**

Seguro que si est√°s leyendo esto es porque regularmente te toque trabajar con
APIs REST y formatos c√≥mo JSON. Nushell es un placer

```Bash
http get https://restcountries.com/v3.1/all?fields=name | get name | select common nativeName | sort | first 3
```

No es necesario `cURL` o `wget` ni acordarse de la sintaxis de `jq`, esta shell
se encarga de todo.

**Integraci√≥n intuitiva con otras herramientas**

Nushell mantiene las funcionalidades b√°sicas de un int√©rprete, como navegar por directorios, 
ejecutar comandos del sistema y manejar procesos. Sin embargo, extiende estas 
capacidades con comandos integrados que entienden el contexto de los datos, 
mejorando significativamente la experiencia. As√≠ que no hay demasiado problema
si quer√©s usar `jq` en vez de los comandos nativos.

**Documentaci√≥n clara y comunidad activa**

Para los desarrolladores que buscamos eficiencia, Nushell ofrece documentaci√≥n 
bien estructurada y una comunidad activa, lo que nos acelera la curva de aprendizaje 
y ayuda a la adopci√≥n.

## ¬øZsh o Nushell? Ambos

Nushell es una herramienta para procesar datos primero y un shell despu√©s. Esto 
significa que pod√©s usar Nushell para realizar tareas complejas de procesamiento 
de datos como: an√°lisis, manipulaci√≥n y visualizaci√≥n de datos.

En mi caso en particular voy a continuar usando Zsh pero cada vez que tenga que
procesar informaci√≥n voy a usar esta herramienta c√≥mo primera opci√≥n. Y quien dice
¬øque tal que termine por adoptarla c√≥mo shell principal? 

Si est√°s acostumbrado a usar int√©rpretes tradicionales como Bash o Zsh, es posible 
que necesites un poco de tiempo para adaptarte a Nushell. Sin embargo, 
una vez que te hayas acostumbrado, vas a encontrar que es una herramienta 
valiosa que pod√©s usar para una variedad de tareas.


